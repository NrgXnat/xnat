[versions]
xnat = "1.8.11-SNAPSHOT"
nrg-dicom-edit6 = "6.7.0-SNAPSHOT"
ohif-viewer = "3.0.0"
container-service = "3.0.0"
dqr = "1.0.0"
batch-launch = "0.4.0"
ml = "1.0.0"
datasets = "1.0.0"
spring-framework = "4.3.30.RELEASE"
spring-security = "4.2.20.RELEASE"
spring-ldap = "2.3.3.RELEASE"
spring-oauth2 = "2.5.0.RELEASE"
spring-jwt = "1.1.1.RELEASE"
swagger = "2.9.2"
vladmihalcea-hibernate-types = "2.14.0"
activemq = "5.16.0"
activemq-protobuf = "1.1"
ant = "1.9.8"
antlr3 = "3.5.2"
antlr4 = "4.7.1"
hsqldb = "2.3.6"
hikaricp = "4.0.3"
aopalliance = "1.0"
aspectj = "1.8.10"
avalon = "4.3"
axis = "1.4"
msv = "2013.6.1"
cglib = "2.2.2"
commons-beanutils = "1.9.4"
commons-cli = "1.4"
commons-codec = "1.10"
commons-compress = "1.24.0"
commons-collections = "3.2.2"
commons-collections4 = "4.4"
commons-configuration = "1.10"
commons-configuration2 = "2.1"
commons-csv = "1.10.0"
commons-dbcp2 = "2.9.0"
commons-digester = "1.8.1"
commons-discovery = "0.5"
commons-email = "1.5"
commons-fileupload = "1.5"
commons-httpclient = "3.1"
commons-io = "2.15.1"
commons-lang = "2.6"
commons-lang3 = "3.11"
commons-logging = "1.1.1"
commons-math = "2.2"
commons-net = "3.10.0"
commons-text = "1.10.0"
commons-pool2 = "2.9.0"
dcm4che = "2.0.29"
dcm4che5 = "5.31.0"
pixelmed = "nrg-20200327"
pixelmed-codec = "20200328"
pixelmed-imageio = "20200328"
dom4j = "1.6.1"
ecs = "1.4.2"
ehcache = "2.6.11"
fastmd5 = "2.7.1"
fest-swing = "1.2.1"
lorem = "2.1"
fop = "0.20.5"
groovy = "2.4.20"
guava = "32.1.3-jre"
gson = "2.9.0"
auto-value = "1.7.4"
h2 = "1.4.200"
eclipse-jgit = "4.5.4.201711221230-r"
hibernate-commons = "4.0.5.Final"
hibernate-jpa-2-1 = "1.0.2.Final"
hibernate-validator = "4.3.2.Final"
hibernate = "4.3.11.Final"
httpcomponents-client = "4.5.13"
httpcomponents-core = "4.4.6"
httpcomponents-mime = "4.5.14"
imagej = "1.53c"
jai-imageio = "1.1"
itext = "2.1.7"
jackson = "2.13.5"
java-uuid-generator = "3.1.4"
lombok = "1.18.22"
jargon = "1.4.25"
java-getopt = "1.0.13"
javassist = "3.24.0-GA"
javax-activation = "1.1.1"
javax-annotation = "1.3.2"
javax-inject = "1"
javax-interceptor = "1.2.2"
javax-j2ee-api = "1.1.1"
javax-jms-api = "2.0.1"
javax-mail = "1.5.6"
javax-validation = "2.0.1.Final"
jcalendar = "1.4"
jcs = "1.3"
jena-tdb = "1.0.1"
jena = "2.11.1"
jetty = "6.1.25"
cargo = "1.6.5"
joda-time = "2.7"
jruby = "1.7.19"
json = "20231013"
jstl = "1.2"
hamcrest = "1.3"
hamcrest2 = "2.2"
assertj = "3.16.1"
junit = "4.13.2"
junit-jupiter = "5.8.1"
spring-test-junit5 = "1.5.0"
jacoco = "0.8.7"
checkstyle = "9.3"
spotbugs = "4.5.3"
jython = "2.7.3"
jzlib = "1.1.3"
log4j = "1.2.17"
log4j2 = "2.12.0"
mockito-all = "1.10.19"
mockito = "2.28.2"
mockito-jupiter = "4.0.0"
powermock = "2.0.5"
easymock = "1.2_Java1.3"
wiremock = "2.21.0"
nifti-io = "1.0"
org-apache-regexp = "1.5.0"
org-postgresql = "42.2.10"
datasource-proxy = "1.6"
log4jdbc = "0.2.0"
quartz = "2.3.2"
reflections = "0.9.11"
restlet = "1.1.10"
saxon = "9.1.0.8"
servlet-api = "3.1.0"
slf4j = "1.7.30"
logback = "1.2.3"
logstash = "5.3"
javamelody = "1.90.0"
findbugs-jsr305 = "3.0.2"
metainf-services = "1.8"
jetbrains-annotations = "17.0.0"
springockito = "1.0.5"
torque = "3.3"
turbine = "2.3.3"
user-agent-utils = "1.20"
io-projectreactor = "2.0.8.RELEASE"
velocity-tools = "2.0"
velocity = "1.7"
wizard = "1.2.1"
xalan = "2.7.2"
xbean = "3.17"
xmlbeans = "2.6.0"
jayway = "2.8.0"
gradle-git = "0.12.1"
gradle-tomcat = "2.7.0"
gradle-cargo = "2.8.0"
gradle-dependency-management = "1.0.11.RELEASE"
gradle-lombok = "5.0.0"
tomcat-embed = "9.0.54"
install4j-maven-plugin = "1.1.2"
spotbugs-maven-plugin = "4.5.3.0"
maven-assembly-plugin = "3.3.0"
maven-compiler-plugin = "3.8.1"
maven-dependency-plugin = "3.1.2"
copy-rename-maven-plugin = "1.0.1"
maven-jar-plugin = "3.2.0"
maven-jarsigner-plugin = "3.0.0"
maven-javadoc-plugin = "3.2.0"
maven-resources-plugin = "3.1.0"
maven-shade-plugin = "3.2.4"
maven-source-plugin = "3.2.1"
maven-surefire-plugin = "2.22.1"
maven-war-plugin = "3.3.1"
javadoc-coverage = "1.1.1"
micrometer-core = "1.12.4"
datasource-micrometer = "1.0.3"

[libraries]
framework = { module = "org.nrg:framework", version.ref = "xnat" }
automation = { module = "org.nrg:automation", version.ref = "xnat" }
prefs = { module = "org.nrg:prefs", version.ref = "xnat" }
mail = { module = "org.nrg:mail", version.ref = "xnat" }
notify = { module = "org.nrg:notify", version.ref = "xnat" }
config = { module = "org.nrg:config", version.ref = "xnat" }
transaction = { module = "org.nrg:transaction", version.ref = "xnat" }
test = { module = "org.nrg:test", version.ref = "xnat" }
nrg-all = { module = "org.nrg:nrg-all", version.ref = "xnat" }
mizer = { module = "org.nrg.dicom:mizer", version.ref = "xnat" }
dicom-edit4 = { module = "org.nrg.dicom:dicom-edit4", version.ref = "xnat" }
dicom-edit6 = { module = "org.nrg.dicom:dicom-edit6", version.ref = "nrg-dicom-edit6" }
dicomtools = { module = "org.nrg:dicomtools", version.ref = "xnat" }
dicomimageutils = { module = "org.nrg:DicomImageUtils", version.ref = "xnat" }
extattr = { module = "org.nrg:ExtAttr", version.ref = "xnat" }
prearcimporter = { module = "org.nrg:PrearcImporter", version.ref = "xnat" }
sessionbuilders = { module = "org.nrg:SessionBuilders", version.ref = "xnat" }
dicom-xnat = { module = "org.nrg:dicom-xnat", version.ref = "xnat" }
dicom-xnat-mx = { module = "org.nrg:dicom-xnat-mx", version.ref = "xnat" }
dicom-xnat-sop = { module = "org.nrg:dicom-xnat-sop", version.ref = "xnat" }
dicom-xnat-util = { module = "org.nrg:dicom-xnat-util", version.ref = "xnat" }
ecat4xnat = { module = "org.nrg:ecat4xnat", version.ref = "xnat" }
ecat-io = { module = "org.nrg:ecat-io", version.ref = "xnat" }
ecat-edit = { module = "org.nrg:ecat-edit", version.ref = "xnat" }
tasks = { module = "org.nrg.xnat:tasks", version.ref = "xnat" }
xnat-data-builder = { module = "org.nrg.xnat.build:xnat-data-builder", version.ref = "xnat" }
web = { module = "org.nrg.xnat:web", version.ref = "xnat" }
xnat-web = { module = "org.nrg.xnat.web:xnat-web", version.ref = "xnat" }
spawner = { module = "org.nrg.xnat:spawner", version.ref = "xnat" }
xnat-data-models = { module = "org.nrg.xnat:xnat-data-models", version.ref = "xnat" }
xdat-data-builder = { module = "org.nrg.xdat.build:xdat-data-builder", version.ref = "xnat" }
core = { module = "org.nrg.xdat:core", version.ref = "xnat" }
beans = { module = "org.nrg.xdat:beans", version.ref = "xnat" }
xdat-beans = { module = "org.nrg.xdat:xdat-beans", version.ref = "xnat" }
data-client = { module = "org.nrg.xnat:data-client", version.ref = "xnat" }
plexiviewer = { module = "org.nrg.xnat:plexiviewer", version.ref = "xnat" }
ximgview-plugin = { module = "org.nrg.xnatx.plugins:ximgview-plugin", version = "1.0.2" }
pipelinebase = { module = "org.nrg:pipelineBase", version = "1.0" }
pipelinebuild = { module = "org.nrg:pipelineBuild", version = "1.0" }
pipelineworkflow = { module = "org.nrg:pipelineWorkflow", version = "1.0" }
xnat-pipeline = { module = "org.nrg.xnat.pipeline:xnat-pipeline", version.ref = "xnat" }
xnat-tools = { module = "org.nrg.xnat.pipeline:xnat-tools", version.ref = "xnat" }
catalog = { module = "org.nrg.xnat.pipeline:catalog", version.ref = "xnat" }
client = { module = "org.nrg.xnat.pipeline:client", version.ref = "xnat" }
imagingtools = { module = "org.nrg.xnat.pipeline:imagingtools", version.ref = "xnat" }
pipeline-client = { module = "org.nrg.xnat.pipeline:pipeline-client", version.ref = "xnat" }
pipelinexnat = { module = "org.nrg:pipelineXNAT", version = "1.0" }
base = { module = "org.nrg.xnat.pipeline:base", version = "1.0" }
build = { module = "org.nrg.xnat.pipeline:build", version = "1.0" }
workflow = { module = "org.nrg.xnat.pipeline:workflow", version = "1.0" }
xnatsrb = { module = "org.nrg.xnat:xnatsrb", version = "1.0.1" }
xnatfs = { module = "org.nrg.xnat:xnatfs", version = "1.5.1" }
batch-launch-plugin = { module = "org.nrg.xnatx.plugins:batch_launch_plugin", version.ref = "batch-launch" }
container-service = { module = "org.nrg.xnatx.plugins:container-service", version.ref = "container-service" }
dicom-query-retrieve = { module = "org.nrg.xnatx.plugins:dicom-query-retrieve", version.ref = "dqr" }
ml-plugin = { module = "org.nrg.xnatx.plugins:ml-plugin", version.ref = "ml" }
xnatx-collection = { module = "org.nrg.xnatx.plugins:xnatx-collection", version.ref = "datasets" }
ohif-viewer = { module = "org.nrg.xnatx:ohif-viewer", version.ref = "ohif-viewer" }
spring-web = { module = "org.springframework:spring-web", version.ref = "spring-framework" }
spring-orm = { module = "org.springframework:spring-orm", version.ref = "spring-framework" }
spring-oxm = { module = "org.springframework:spring-oxm", version.ref = "spring-framework" }
spring-tx = { module = "org.springframework:spring-tx", version.ref = "spring-framework" }
spring-jms = { module = "org.springframework:spring-jms", version.ref = "spring-framework" }
spring-messaging = { module = "org.springframework:spring-messaging", version.ref = "spring-framework" }
spring-aop = { module = "org.springframework:spring-aop", version.ref = "spring-framework" }
spring-beans = { module = "org.springframework:spring-beans", version.ref = "spring-framework" }
spring-expression = { module = "org.springframework:spring-expression", version.ref = "spring-framework" }
spring-jdbc = { module = "org.springframework:spring-jdbc", version.ref = "spring-framework" }
spring-webmvc = { module = "org.springframework:spring-webmvc", version.ref = "spring-framework" }
spring-context = { module = "org.springframework:spring-context", version.ref = "spring-framework" }
spring-core = { module = "org.springframework:spring-core", version.ref = "spring-framework" }
spring-context-support = { module = "org.springframework:spring-context-support", version.ref = "spring-framework" }
spring-security-acl = { module = "org.springframework.security:spring-security-acl", version.ref = "spring-security" }
spring-security-aspects = { module = "org.springframework.security:spring-security-aspects", version.ref = "spring-security" }
spring-security-config = { module = "org.springframework.security:spring-security-config", version.ref = "spring-security" }
spring-security-core = { module = "org.springframework.security:spring-security-core", version.ref = "spring-security" }
spring-security-ldap = { module = "org.springframework.security:spring-security-ldap", version.ref = "spring-security" }
spring-security-taglibs = { module = "org.springframework.security:spring-security-taglibs", version.ref = "spring-security" }
spring-security-web = { module = "org.springframework.security:spring-security-web", version.ref = "spring-security" }
spring-security-openid = { module = "org.springframework.security:spring-security-openid", version.ref = "spring-security" }
spring-ldap-core = { module = "org.springframework.ldap:spring-ldap-core", version.ref = "spring-ldap" }
spring-security-oauth2 = { module = "org.springframework.security.oauth:spring-security-oauth2", version.ref = "spring-oauth2" }
spring-security-jwt = { module = "org.springframework.security:spring-security-jwt", version.ref = "spring-jwt" }
springfox-swagger2 = { module = "io.springfox:springfox-swagger2", version.ref = "swagger" }
springfox-swagger-ui = { module = "io.springfox:springfox-swagger-ui", version.ref = "swagger" }
javadoc-coverage = { module = "com.manoelcampos:javadoc-coverage", version.ref = "javadoc-coverage" }
hibernate-core = { module = "org.hibernate:hibernate-core", version.ref = "hibernate" }
hibernate-envers = { module = "org.hibernate:hibernate-envers", version.ref = "hibernate" }
hibernate-jpa-2-1-api = { module = "org.hibernate.javax.persistence:hibernate-jpa-2.1-api", version.ref = "hibernate-jpa-2-1" }
hibernate-validator = { module = "org.hibernate:hibernate-validator", version.ref = "hibernate-validator" }
hibernate-commons-annotations = { module = "org.hibernate.common:hibernate-commons-annotations", version.ref = "hibernate-commons" }
hibernate-ehcache = { module = "org.hibernate:hibernate-ehcache", version.ref = "hibernate" }
hibernate-types-43 = { module = "com.vladmihalcea:hibernate-types-43", version.ref = "vladmihalcea-hibernate-types" }
ehcache-core = { module = "net.sf.ehcache:ehcache-core", version.ref = "ehcache" }
jena-core = { module = "org.apache.jena:jena-core", version.ref = "jena" }
jena-tdb = { module = "org.apache.jena:jena-tdb", version.ref = "jena-tdb" }
reflections = { module = "org.reflections:reflections", version.ref = "reflections" }
org-restlet = { module = "org.restlet:org.restlet", version.ref = "restlet" }
com-noelios-restlet = { module = "com.noelios.restlet:com.noelios.restlet", version.ref = "restlet" }
com-noelios-restlet-ext-servlet = { module = "com.noelios.restlet:com.noelios.restlet.ext.servlet", version.ref = "restlet" }
org-restlet-ext-fileupload = { module = "org.restlet:org.restlet.ext.fileupload", version.ref = "restlet" }
httpclient = { module = "org.apache.httpcomponents:httpclient", version.ref = "httpcomponents-client" }
httpcore-nio = { module = "org.apache.httpcomponents:httpcore-nio", version.ref = "httpcomponents-core" }
httpcore = { module = "org.apache.httpcomponents:httpcore", version.ref = "httpcomponents-core" }
httpmime = { module = "org.apache.httpcomponents:httpmime", version.ref = "httpcomponents-mime" }
org-eclipse-jgit = { module = "org.eclipse.jgit:org.eclipse.jgit", version.ref = "eclipse-jgit" }
useragentutils = { module = "eu.bitwalker:UserAgentUtils", version.ref = "user-agent-utils" }
dom4j = { module = "dom4j:dom4j", version.ref = "dom4j" }
aopalliance = { module = "aopalliance:aopalliance", version.ref = "aopalliance" }
aspectjweaver = { module = "org.aspectj:aspectjweaver", version.ref = "aspectj" }
aspectjrt = { module = "org.aspectj:aspectjrt", version.ref = "aspectj" }
commons-beanutils = { module = "commons-beanutils:commons-beanutils", version.ref = "commons-beanutils" }
commons-cli = { module = "commons-cli:commons-cli", version.ref = "commons-cli" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }
commons-compress = { module = "org.apache.commons:commons-compress", version.ref = "commons-compress" }
commons-collections = { module = "commons-collections:commons-collections", version.ref = "commons-collections" }
commons-collections4 = { module = "org.apache.commons:commons-collections4", version.ref = "commons-collections4" }
commons-configuration2 = { module = "org.apache.commons:commons-configuration2", version.ref = "commons-configuration2" }
commons-csv = { module = "org.apache.commons:commons-csv", version.ref = "commons-csv" }
commons-dbcp2 = { module = "org.apache.commons:commons-dbcp2", version.ref = "commons-dbcp2" }
commons-digester = { module = "commons-digester:commons-digester", version.ref = "commons-digester" }
commons-discovery = { module = "commons-discovery:commons-discovery", version.ref = "commons-discovery" }
commons-email = { module = "org.apache.commons:commons-email", version.ref = "commons-email" }
commons-logging = { module = "commons-logging:commons-logging", version.ref = "commons-logging" }
commons-math = { module = "org.apache.commons:commons-math", version.ref = "commons-math" }
commons-net = { module = "commons-net:commons-net", version.ref = "commons-net" }
commons-httpclient = { module = "commons-httpclient:commons-httpclient", version.ref = "commons-httpclient" }
commons-lang = { module = "commons-lang:commons-lang", version.ref = "commons-lang" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
commons-text = { module = "org.apache.commons:commons-text", version.ref = "commons-text" }
commons-pool2 = { module = "org.apache.commons:commons-pool2", version.ref = "commons-pool2" }
commons-fileupload = { module = "commons-fileupload:commons-fileupload", version.ref = "commons-fileupload" }
commons-configuration = { module = "commons-configuration:commons-configuration", version.ref = "commons-configuration" }
commons-io = { module = "commons-io:commons-io", version.ref = "commons-io" }
dcm4che-core = { module = "dcm4che:dcm4che-core", version.ref = "dcm4che" }
dcm4che-iod = { module = "dcm4che:dcm4che-iod", version.ref = "dcm4che" }
dcm4che-imageio-rle = { module = "dcm4che:dcm4che-imageio-rle", version.ref = "dcm4che" }
dcm4che-imageio = { module = "dcm4che:dcm4che-imageio", version.ref = "dcm4che" }
dcm4che-net = { module = "dcm4che:dcm4che-net", version.ref = "dcm4che" }
dcm4che-image = { module = "dcm4che:dcm4che-image", version.ref = "dcm4che" }
dcm4che-tool-dcmecho = { module = "dcm4che.tool:dcm4che-tool-dcmecho", version.ref = "dcm4che" }
dcm4che-tool-dcmqr = { module = "dcm4che.tool:dcm4che-tool-dcmqr", version.ref = "dcm4che" }
dcm4che5-tool-common = { module = "org.dcm4che.tool:dcm4che-tool-common", version.ref = "dcm4che5" }
dcm4che5-tool-storescp = { module = "org.dcm4che.tool:dcm4che-tool-storescp", version.ref = "dcm4che5" }
dcm4che5-tool-storescu = { module = "org.dcm4che.tool:dcm4che-tool-storescu", version.ref = "dcm4che5" }
dcm4che5-core = { module = "org.dcm4che:dcm4che-core", version.ref = "dcm4che5" }
dcm4che5-dict = { module = "org.dcm4che:dcm4che-dict", version.ref = "dcm4che5" }
dcm4che5-dict-arc = { module = "org.dcm4che:dcm4che-dict-arc", version.ref = "dcm4che5" }
dcm4che5-dict-priv = { module = "org.dcm4che:dcm4che-dict-priv", version.ref = "dcm4che5" }
dcm4che5-dict-private = { module = "org.dcm4che:dcm4che-dict-private", version.ref = "dcm4che5" }
dcm4che5-image = { module = "org.dcm4che:dcm4che-image", version.ref = "dcm4che5" }
dcm4che5-imageio = { module = "org.dcm4che:dcm4che-imageio", version.ref = "dcm4che5" }
dcm4che5-imageio-rle = { module = "org.dcm4che:dcm4che-imageio-rle", version.ref = "dcm4che5" }
dcm4che5-javascript = { module = "org.dcm4che:dcm4che-javascript", version.ref = "dcm4che5" }
dcm4che5-js-dict = { module = "org.dcm4che:dcm4che-js-dict", version.ref = "dcm4che5" }
dcm4che5-json = { module = "org.dcm4che:dcm4che-json", version.ref = "dcm4che5" }
dcm4che5-mime = { module = "org.dcm4che:dcm4che-mime", version.ref = "dcm4che5" }
dcm4che5-net = { module = "org.dcm4che:dcm4che-net", version.ref = "dcm4che5" }
pixelmed = { module = "com.dclunie:pixelmed", version.ref = "pixelmed" }
pixelmed-codec = { module = "com.dclunie:pixelmed-codec", version.ref = "pixelmed-codec" }
pixelmed-imageio = { module = "com.dclunie:pixelmed-imageio", version.ref = "pixelmed-imageio" }
activemq-all = { module = "org.apache.activemq:activemq-all", version.ref = "activemq" }
activemq-broker = { module = "org.apache.activemq:activemq-broker", version.ref = "activemq" }
activemq-client = { module = "org.apache.activemq:activemq-client", version.ref = "activemq" }
activemq-jaas = { module = "org.apache.activemq:activemq-jaas", version.ref = "activemq" }
activemq-jdbc-store = { module = "org.apache.activemq:activemq-jdbc-store", version.ref = "activemq" }
activemq-kahadb-store = { module = "org.apache.activemq:activemq-kahadb-store", version.ref = "activemq" }
activemq-mqtt = { module = "org.apache.activemq:activemq-mqtt", version.ref = "activemq" }
activemq-openwire-legacy = { module = "org.apache.activemq:activemq-openwire-legacy", version.ref = "activemq" }
activemq-spring = { module = "org.apache.activemq:activemq-spring", version.ref = "activemq" }
activemq-stomp = { module = "org.apache.activemq:activemq-stomp", version.ref = "activemq" }
activemq-protobuf = { module = "org.apache.activemq.protobuf:activemq-protobuf", version.ref = "activemq-protobuf" }
xbean-spring = { module = "org.apache.xbean:xbean-spring", version.ref = "xbean" }
xmlbeans = { module = "org.apache.xmlbeans:xmlbeans", version.ref = "xmlbeans" }
xmlbeans-xpath = { module = "org.apache.xmlbeans:xmlbeans-xpath", version.ref = "xmlbeans" }
xalan = { module = "xalan:xalan", version.ref = "xalan" }
serializer = { module = "xalan:serializer", version.ref = "xalan" }
saxon = { module = "net.sourceforge.saxon:saxon", version.ref = "saxon" }
quartz = { module = "org.quartz-scheduler:quartz", version.ref = "quartz" }
reactor-bus = { module = "io.projectreactor:reactor-bus", version.ref = "io-projectreactor" }
reactor-core = { module = "io.projectreactor:reactor-core", version.ref = "io-projectreactor" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
auto-value = { module = "com.google.auto.value:auto-value", version.ref = "auto-value" }
auto-value-annotations = { module = "com.google.auto.value:auto-value-annotations", version.ref = "auto-value" }
google-collections = { module = "com.google.collections:google-collections", version = "1.0" }
java-getopt = { module = "gnu.getopt:java-getopt", version.ref = "java-getopt" }
log4j = { module = "log4j:log4j", version.ref = "log4j" }
log4j-bom = { module = "org.apache.logging.log4j:log4j-bom", version.ref = "log4j2" }
javamelody-core = { module = "net.bull.javamelody:javamelody-core", version.ref = "javamelody" }
axis-axis = { module = "axis:axis", version.ref = "axis" }
axis-axis-ant = { module = "axis:axis-ant", version.ref = "axis" }
axis-axis-schema = { module = "axis:axis-schema", version = "1.3" }
apache-axis = { module = "org.apache.axis:axis", version.ref = "axis" }
apache-axis-jaxrpc = { module = "org.apache.axis:axis-jaxrpc", version.ref = "axis" }
apache-axis-saaj = { module = "org.apache.axis:axis-saaj", version.ref = "axis" }
msv-core = { module = "net.java.dev.msv:msv-core", version.ref = "msv" }
xsdlib = { module = "net.java.dev.msv:xsdlib", version.ref = "msv" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-dataformat-xml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", version.ref = "jackson" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jackson-dataformat-csv = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-csv", version.ref = "jackson" }
jackson-datatype-hibernate4 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-hibernate4", version.ref = "jackson" }
jackson-datatype-guava = { module = "com.fasterxml.jackson.datatype:jackson-datatype-guava", version.ref = "jackson" }
jackson-module-parameter-names = { module = "com.fasterxml.jackson.module:jackson-module-parameter-names", version.ref = "jackson" }
jackson-datatype-jdk8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
java-uuid-generator = { module = "com.fasterxml.uuid:java-uuid-generator", version.ref = "java-uuid-generator" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
slf4j-log4j12 = { module = "org.slf4j:slf4j-log4j12", version.ref = "slf4j" }
jul-to-slf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }
slf4j-nop = { module = "org.slf4j:slf4j-nop", version.ref = "slf4j" }
jcl-over-slf4j = { module = "org.slf4j:jcl-over-slf4j", version.ref = "slf4j" }
log4j-over-slf4j = { module = "org.slf4j:log4j-over-slf4j", version.ref = "slf4j" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
logstash-logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash" }
cglib = { module = "cglib:cglib", version.ref = "cglib" }
javassist = { module = "org.javassist:javassist", version.ref = "javassist" }
ant = { module = "org.apache.ant:ant", version.ref = "ant" }
antlr = { module = "org.antlr:antlr", version.ref = "antlr3" }
antlr-runtime = { module = "org.antlr:antlr-runtime", version.ref = "antlr3" }
antlr4 = { module = "org.antlr:antlr4", version.ref = "antlr4" }
antlr4-runtime = { module = "org.antlr:antlr4-runtime", version.ref = "antlr4" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp" }
hsqldb = { module = "org.hsqldb:hsqldb", version.ref = "hsqldb" }
turbine = { module = "turbine:turbine", version.ref = "turbine" }
torque = { module = "torque:torque", version.ref = "torque" }
velocity = { module = "org.apache.velocity:velocity", version.ref = "velocity" }
velocity-tools = { module = "org.apache.velocity:velocity-tools", version.ref = "velocity-tools" }
ecs = { module = "ecs:ecs", version.ref = "ecs" }
itext = { module = "com.lowagie:itext", version.ref = "itext" }
fast-md5 = { module = "com.twmacinta:fast-md5", version.ref = "fastmd5" }
jcalendar = { module = "com.toedter:jcalendar", version.ref = "jcalendar" }
wizard = { module = "org.swinglabs:wizard", version.ref = "wizard" }
fop = { module = "fop:fop", version.ref = "fop" }
jcs = { module = "jcs:jcs", version.ref = "jcs" }
avalon-framework-impl = { module = "avalon-framework:avalon-framework-impl", version.ref = "avalon" }
jargon = { module = "org.dspace:jargon", version.ref = "jargon" }
json = { module = "org.json:json", version.ref = "json" }
ij = { module = "net.imagej:ij", version.ref = "imagej" }
jzlib = { module = "com.jcraft:jzlib", version.ref = "jzlib" }
joda-time = { module = "joda-time:joda-time", version.ref = "joda-time" }
nifti-io = { module = "nifti_io:nifti_io", version.ref = "nifti-io" }
com-springsource-org-apache-regexp = { module = "org.apache.regexp:com.springsource.org.apache.regexp", version.ref = "org-apache-regexp" }
cargo-core-api-module = { module = "org.codehaus.cargo:cargo-core-api-module", version.ref = "cargo" }
activation = { module = "javax.activation:activation", version.ref = "javax-activation" }
javax-annotation-api = { module = "javax.annotation:javax.annotation-api", version.ref = "javax-annotation" }
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javax-inject" }
javax-interceptor-api = { module = "javax.interceptor:javax.interceptor-api", version.ref = "javax-interceptor" }
javax-jms-api = { module = "javax.jms:javax.jms-api", version.ref = "javax-jms-api" }
javax-mail-api = { module = "javax.mail:javax.mail-api", version.ref = "javax-mail" }
javax-management-j2ee-api = { module = "javax.management.j2ee:javax.management.j2ee-api", version.ref = "javax-j2ee-api" }
javax-servlet-api = { module = "javax.servlet:javax.servlet-api", version.ref = "servlet-api" }
jstl = { module = "javax.servlet:jstl", version.ref = "jstl" }
validation-api = { module = "javax.validation:validation-api", version.ref = "javax-validation" }
jaxrpc-api = { module = "javax.xml:jaxrpc-api", version = "1.1" }
jai-imageio = { module = "com.sun.media:jai_imageio", version.ref = "jai-imageio" }
javax-mail = { module = "com.sun.mail:javax.mail", version.ref = "javax-mail" }
jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "findbugs-jsr305" }
annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrains-annotations" }
metainf-services = { module = "org.kohsuke.metainf-services:metainf-services", version.ref = "metainf-services" }
groovy-all = { module = "org.codehaus.groovy:groovy-all", version.ref = "groovy" }
jython = { module = "org.python:jython", version.ref = "jython" }
jython-standalone = { module = "org.python:jython-standalone", version.ref = "jython" }
jruby = { module = "org.jruby:jruby", version.ref = "jruby" }
dependency-management-plugin = { module = "io.spring.gradle:dependency-management-plugin", version.ref = "gradle-dependency-management" }
gradle-cargo-plugin = { module = "com.bmuschko:gradle-cargo-plugin", version.ref = "gradle-cargo" }
gradle-tomcat-plugin = { module = "com.bmuschko:gradle-tomcat-plugin", version.ref = "gradle-tomcat" }
gradle-git-version = { module = "com.palantir.gradle.gitversion:gradle-git-version", version.ref = "gradle-git" }
tomcat-embed-core = { module = "org.apache.tomcat.embed:tomcat-embed-core", version.ref = "tomcat-embed" }
tomcat-embed-jasper = { module = "org.apache.tomcat.embed:tomcat-embed-jasper", version.ref = "tomcat-embed" }
tomcat-embed-logging-juli = { module = "org.apache.tomcat.embed:tomcat-embed-logging-juli", version.ref = "tomcat-embed" }
cargo-ant = { module = "org.codehaus.cargo:cargo-ant", version.ref = "cargo" }
cargo-core-uberjar = { module = "org.codehaus.cargo:cargo-core-uberjar", version.ref = "cargo" }
checkstyle = { module = "com.puppycrawl.tools:checkstyle", version.ref = "checkstyle" }
spotbugs = { module = "com.github.spotbugs:spotbugs", version.ref = "spotbugs" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "org-postgresql" }
datasource-proxy = { module = "net.ttddyy:datasource-proxy", version.ref = "datasource-proxy" }
log4jdbc-file = { module = "com.github.marcosemiao.log4jdbc:log4jdbc-file", version.ref = "log4jdbc" }
hamcrest-core = { module = "org.hamcrest:hamcrest-core", version.ref = "hamcrest" }
hamcrest-library = { module = "org.hamcrest:hamcrest-library", version.ref = "hamcrest" }
hamcrest = { module = "org.hamcrest:hamcrest", version.ref = "hamcrest2" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
junit = { module = "junit:junit", version.ref = "junit" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit-jupiter" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit-jupiter" }
mockito-all = { module = "org.mockito:mockito-all", version.ref = "mockito-all" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito-jupiter" }
powermock-module-junit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "powermock" }
powermock-api-mockito2 = { module = "org.powermock:powermock-api-mockito2", version.ref = "powermock" }
easymock = { module = "easymock:easymock", version.ref = "easymock" }
wiremock = { module = "com.github.tomakehurst:wiremock", version.ref = "wiremock" }
spring-test = { module = "org.springframework:spring-test", version.ref = "spring-framework" }
springockito = { module = "org.kubek2k:springockito", version.ref = "springockito" }
fest-swing = { module = "org.easytesting:fest-swing", version.ref = "fest-swing" }
fest-swing-junit = { module = "org.easytesting:fest-swing-junit", version.ref = "fest-swing" }
lorem = { module = "com.thedeanda:lorem", version.ref = "lorem" }
spring-test-junit5 = { module = "com.github.sbrannen:spring-test-junit5", version.ref = "spring-test-junit5" }
jetty = { module = "org.mortbay.jetty:jetty", version.ref = "jetty" }
spring-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "spring-security" }
json-path = { module = "com.jayway.jsonpath:json-path", version.ref = "jayway" }
micrometer-core = { module = "io.micrometer:micrometer-core", version.ref = "micrometer-core" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer-core" }
datasource-micrometer = { module = "net.ttddyy.observation:datasource-micrometer", version.ref = "datasource-micrometer" }
