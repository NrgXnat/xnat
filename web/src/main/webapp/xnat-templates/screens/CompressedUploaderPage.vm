<script type="text/javascript">
    XNAT.app = getObject(XNAT.app || {});

    function getSiteConfig() {
        XNAT.xhr.getJSON({
            url: XNAT.url.rootUrl('/xapi/siteConfig'),
            success: function(siteConfig){
                handler = siteConfig['uiDefaultCompressedUploaderImporter'];
                document.getElementById('import-handler').value = handler;
                hiddenIgnoreUnparsable(handler);
            }
        });
    }

    function hiddenIgnoreUnparsable(handler) {
        if (handler === "DICOM-zip") {
            document.getElementById("ignoreUnparsableTr").hidden = false;
        } else {
            document.getElementById("ignoreUnparsableTr").hidden = true;
        }
    }

    function disableForm(theform) {
        if (document.getElementById) {
            for (i = 0; i < theform.length; i++) {
                var tempobj = theform.elements[i];
                tempobj.disabled = true;
            }
            return true;
        }
        else {
            return true;
        }
    }

    var i;
    var req;

    var extractCount = 0;
    var uploadID = "$!uploadID";
    var started = 0;
    var extractTimeOut = 300;
    var usrResPathBase = '/user/cache/resources/' + uploadID + '/files/';
    var destArchive = false;
    var prearchiveLinkString = '<a target="_blank" href="$content.getURI("/app/template/XDATScreen_prearchives.vm")">prearchive</a>';
    this.getSiteConfig();

    function evaluateDestination(ele) {
        if (ele.value == '2') {
            destArchive = true;
            document.getElementById("auto-archive").value = 'true';
            document.getElementById("quarantine").value = 'true';
        } else if (ele.value == '1') {
            destArchive = true;
            document.getElementById("auto-archive").value = 'true';
            document.getElementById("quarantine").value = 'false';
        } else if (ele.value == '0') {
            destArchive = false;
            document.getElementById("auto-archive").value = 'false';
            document.getElementById("quarantine").value = 'false';
        }
    }

    var checkProgressFinal = 0;

    function validateForm() {
        var imageArchive = document.getElementById("image_archive");
        if (!imageArchive.value) {
            xmodal.message('Upload Action', 'Please select an archive to upload.');
            return false;
        }
        if (!(imageArchive.value.endsWith(".gz") || imageArchive.value.endsWith(".tgz") || imageArchive.value.endsWith(".zip"))) {
            xmodal.message('Upload Action', 'Please select a tar.gz, tgz, or zip archive to upload.');
            return false;
        }
        if (document.getElementById("project").selectedIndex === 0) {
            xmodal.message('Upload Action', 'Please select a $displayManager.getSingularDisplayNameForProject().toLowerCase().');
            return false;
        }
        return true;
    }

    function errorHandler(e, base){
        var info = e.responseText ? base + ': ' + e.responseText : base;
        var details = spawn('p',[info]);
        console.log(e);
        xmodal.alert({
            title: 'Error',
            content: '<p><strong>Error ' + e.status + ': '+ e.statusText+'</strong></p>' + details.html,
            okAction: function () {
                xmodal.closeAll();
            }
        });
    }

    function makeTheFormGo() {
        if(!validateForm()){ return; }

        // Upload file, then archive it asynchronously
        var form = document.getElementById("uploadFORM");
        var file = $('#image_archive').prop('files')[0];
        var usrResPath = usrResPathBase + encodeURIComponent(file.name);
        var formDataUpload = new FormData();
        formDataUpload.append("image_archive", file);
        var formDataArchive = new FormData(form);
        formDataArchive.delete("image_archive");
        formDataArchive.append("src", usrResPath);
        formDataArchive.append("http-session-listener", uploadID);
        let ignoreUnparsable = document.getElementById("Ignore-UnparsableUI");
        if (ignoreUnparsable.checked) {
            formDataArchive.append("Ignore-Unparsable", "true");
        } else {
            formDataArchive.append("Ignore-Unparsable", "false");
        }
        formDataArchive.delete("Ignore-UnparsableUI");

        disableForm(form);

        var loading;
        $.ajax({
            method: 'PUT',
            contentType: false,
            url: XNAT.url.csrfUrl('/data' + usrResPath),
            data: formDataUpload,
            processData: false,
            cache: false,
            beforeSend: function() {
                XNAT.app.timeout.maintainLogin = true;
                loading = XNAT.ui.dialog.static.wait("Uploading file", {
                    width: 300,
                    header: false,
                    footer: false,
                    mask: true,
                    padding: '0',
                    top: '80px',
                    classes: 'static',
                    content: spawn('div.message.md', [
                        'Uploading file',
                        spawn('div.clearfix', [
                            spawn('div', {classes: 'pull-progress-div'}, spawn('div', {classes: 'pull-progress-bar'}, '0%'))
                        ])
                    ])
                });
            },
            success: function() {
                $.ajax({
                    method: 'POST',
                    contentType: false,
                    url: XNAT.url.csrfUrl('/data/services/import'),
                    data: formDataArchive,
                    processData: false,
                    cache: false,
                    success: function() {
                        XNAT.app.activityTab.start('Upload extraction/review for archival', uploadID);
                    },
                    error: function(xhr) {
                        errorHandler(xhr, 'Issue requesting archival of your data');
                    },
                    complete: function() {
                        loading.close();
                    }
                });

            },
            error: function(xhr) {
                loading.close();
                errorHandler(xhr, 'Issue uploading your data');
            },
            complete: function() {
                XNAT.app.timeout.maintainLogin = false;
            },
            xhr: function() {
                var xhr = $.ajaxSettings.xhr();
                if (xhr.upload) {
                    xhr.upload.addEventListener('progress', function(event) {
                        var percent = 0;
                        var position = event.loaded || event.position; /*event.position is deprecated*/
                        var total = event.total;
                        if (event.lengthComputable) {
                            percent = Math.ceil(position / total * 100);
                            $(".pull-progress-bar")
                                    .css("width", percent + "%")
                                    .text(percent + "%");
                        } else {
                            $(".pull-progress-bar")
                                    .css("width", "100%")
                                    .text("Waiting...");
                        }
                    }, false);
                    xhr.upload.addEventListener('loadend', function(event) {
                        $(".pull-progress-bar")
                                .css("width", "100%")
                                .text("Requesting archival...");
                    }, false);
                }
                return xhr;
            }
        });
    }
</script>

#if(!$sectionTitle)
    #set($sectionTitle = "<h2>XNAT Compressed Uploader</h2>")
#end
#if($session)
    #set($quarantineMsg=" and specify whether the resulting session should go into a quarantine state")
#end

<div>
    $sectionTitle

    <p>Upload zipped (.zip or .tar.gz or .tgz) DICOM or ECAT (Must use Classic Session Importer) image files to a specified project.</p>
    <p>Selecting 'Prearchive' will place your images into a
        <a target="_blank" href="$content.getURI("/app/template/XDATScreen_prearchives.vm")">temporary holding space</a>,
        which allows you to review the details and match the data to the proper
        $displayManager.getSingularDisplayNameForSubject().toLowerCase() &amp;
        $displayManager.getSingularDisplayNameForImageSession().toLowerCase(). If you are confident the metadata will
        map properly, you may directly 'Archive' the files$!quarantineMsg.
    </p>
    <form id="uploadFORM" class="noHide" enctype="multipart/form-data" method="POST"
          action="">
        <input type="hidden" name="threshhold" value="51516279"/>

        #if($session)
            <input type="hidden" name="EXPT_LABEL" value="$!session.getLabel()"/>
            <input type="hidden" name="SUBJECT_ID" value="$!session.getSubjectData().getLabel()"/>
        #end

        <table border=0 cellpadding="5" cellspacing="0">
            <tr>
                <th align="left">$displayManager.getSingularDisplayNameForProject()</th>
                <td>
                    #if(!$!session)
                        <select id="project" name="project" disabled="true"></select>
                    #else
                        <input type="hidden" name="project" id="project"
                               value="$session.getProject()"/>$session.getProject()
                    #end
                </td>
            </tr>
            <tr>
                <th align="left">Importer handler</th>
                <td>
                    <select id="import-handler" name="import-handler" onchange="hiddenIgnoreUnparsable(this.value);">
                        <option value="DICOM-zip">DICOM</option>
                        <option value="SI">Classic Session Importer (Deprecated)</option>
                    </select>
                </td>
            </tr>
            <tr id="ignoreUnparsableTr">
                <th>Ignore unparsable files</th>
                <td>
                    <input type="checkbox" name="Ignore-UnparsableUI" id="Ignore-UnparsableUI" checked />
                </td>
            </tr>

            #if($!session)
                <tr>
                    <th align="left">$displayManager.getSingularDisplayNameForImageSession()</th>
                    <td>$!session.getLabel()</td>
                </tr>
            #end
            <tr>
                <th align="left">Destination</th>
                <td>
                    <label><input id="pc_0" type='radio' name='prearchive_code' value='0'
                                  #if(!$session)CHECKED#end onchange="evaluateDestination(this)"/>
                        Prearchive</label>&nbsp;&nbsp;&nbsp;
                    <label><input id="pc_2" type='radio' name='prearchive_code' value='1'
                                  #if($session)CHECKED#end onchange="evaluateDestination(this)"/>
                        Archive</label>
                    #if($session)
                        <input type="hidden" name="overwrite" value="append"/>
                        <input type="hidden" id="auto-archive" name='auto-archive' value='TRUE'/>
                    #else
                        <input type="hidden" id="auto-archive" name='auto-archive' value='FALSE'/>
                    #end
                    <input type="hidden" id="quarantine" name='quarantine' value='FALSE'/>
                    <input type="hidden" id="action" name='action' value='commit'/>
                </td>
            </tr>
            <tr>
                <th align="left">File</th>
                <td><input type="file" id="image_archive" name="image_archive" size="60"
                           accept="application/zip, application/x-gzip, application/x-tgz"/></td>
            </tr>
            #auditBoxes("3" "" "Standard Upload" "Upload Images")
            #hideFormJustification()
            <tr>
                <td>&nbsp;</td>
                <td><input id="directButton" type="button" name="eventSubmit_doPerform" value="Begin Upload" onclick="makeTheFormGo();"/>
                </td>
            </tr>
        </table>
    </form>

    <span id="progressBar" style="position:relative; display:none;">
        <div id="ex" style="position: relative; display: block; margin-top:10px;">
            <table width="100%">
                <tr>
                    <td>
                        <div id="extractLabel">Extract/Review:&nbsp;</div>
                    </td>
                    <td>
                        <div id="emptyExtract"
                             style="background-color:#cccccc;border:1px solid black;height:22px;width:300px;padding:0;"
                             align="left">
                            <div id="extractBar"
                                 style="position:relative;top:0;left:0;background-color:#333333;height:22px;width:0;padding-top:5px;padding:0;">
                                <div id="extractPercent"
                                     style="position:relative;top:0;left:0;color:#f0ffff;height:22px;text-align:center;font-weight:bold;padding:0;padding-top:5px;">
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
                <tr id="currentStep" style="display: none">
                    <td>
                        <div id="extractStep">Step:</div>
                    </td>
                    <td>
                         <a id="stepSummary"></a>
                    </td>
                </tr>
                <tr id="overallSummary" style="display: none">
                    <td>
                        <div id="extractResult">Result:</div>
                    </td>
                    <td id="overallSummaryContent">
                    </td>
                </tr>
            </table>
        </div>
    </span>

    <script type="text/javascript">
        // Adapted from Sun Java Web Start Auto-Install Demo
        // http://java.sun.com/developer/technicalArticles/JavaLP/javawebstart/AutoInstallDemo.html
        var detect = navigator.userAgent.toLowerCase();
        var windowsIE = (checkPlatform("msie") && checkPlatform("win"));

        function checkPlatform(string) {
            place = detect.indexOf(string) + 1;
            thestring = string;
            return place;
        }
    </script>
</div>

#if(!$!session)
<script type="text/javascript" src="$content.getURI('scripts/subjectAssessorData/proj_tools.js')"></script>

<script type="text/javascript">
    //load projects
    window.defaultProject = "$!project";

    window.projectLoader = new ProjectLoader();

    window.projectLoader.onLoadComplete.subscribe(function () {
        renderProjects(document.getElementById("project"), window.projectLoader.list, window.defaultProject);
    });

    document.getElementById("project").onchange = function (o) {
        if (this.selectedIndex > 0) {
            var s = this.options[this.selectedIndex];
            var pc = document.getElementById("pc_0");
            if (pc != undefined && pc != null) {
                if (s.pc == "4") {
                    if (s.qc == "0") {
                        document.getElementById("pc_2").click();
                    } else {
                        document.getElementById("pc_1").click();
                    }
                } else {
                    document.getElementById("pc_0").click();
                }
            }
        }
    };

    window.projectLoader.init();

    //build breadcrumb
    var breadcrumbs = document.getElementById('breadcrumbs');

    if (breadcrumbs != null) {
        var bread = "";
        #if($project)
            bread = bread + "<a href='$link.setAction("DisplayItemAction").addPathInfo("search_element","xnat:projectData").addPathInfo("search_field","xnat:projectData.ID").addPathInfo("search_value","$project")'>$displayManager.getSingularDisplayNameForProject().toUpperCase(): $!project</a>";
            bread = bread + "&nbsp;>&nbsp;Upload Images";
        #end
        breadcrumbs.innerHTML = bread;
    }
</script>
#end
